generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  bio       String?
  avatar    String?
  role      UserRole  @default(CUSTOMER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bookings  Booking[] @relation("UserBookings")
  firms     Firm[]    @relation("UserFirms")
  reviews   Review[]  @relation("UserReviews")
}

model Firm {
  id           Int        @id @default(autoincrement())
  name         String
  description  String
  location     String
  openingHours String
  address      String
  ownerId      Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  imagePath    String?
  bookings     Booking[]  @relation("FirmBookings")
  owner        User       @relation("UserFirms", fields: [ownerId], references: [id])
  menuItems    MenuItem[] @relation("FirmMenuItems")
  reviews      Review[]   @relation("FirmReviews")
}

model BookingHistory {
  id             Int      @id @default(autoincrement())
  bookingId      Int
  bookingTime    DateTime
  numberOfPeople Int
  customerId     Int
  firmId         Int
  menuItemId     Int?
}

model MenuItem {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Float
  category    String
  firmId      Int
  Booking     Booking[]
  firm        Firm      @relation("FirmMenuItems", fields: [firmId], references: [id])
}

model Booking {
  id             Int           @id @default(autoincrement())
  bookingTime    DateTime
  numberOfPeople Int
  status         BookingStatus @default(PENDING)
  customerId     Int
  firmId         Int
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  menuItemId     Int?
  customer       User          @relation("UserBookings", fields: [customerId], references: [id])
  firm           Firm          @relation("FirmBookings", fields: [firmId], references: [id])
  menuItem       MenuItem?     @relation(fields: [menuItemId], references: [id])
}

model Review {
  id         Int      @id @default(autoincrement())
  rating     Int
  comment    String
  customerId Int
  firmId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customer   User     @relation("UserReviews", fields: [customerId], references: [id])
  firm       Firm     @relation("FirmReviews", fields: [firmId], references: [id])
}

enum UserRole {
  CUSTOMER
  OWNER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
